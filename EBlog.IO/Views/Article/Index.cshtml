@using EBlog.Service.Models.VMs.Article
@model IEnumerable<GetArticleVM>
@{
    ViewData["Title"] = "View";
}

<h1>View</h1>

<h3>This view will be Article List page</h3>

<div class="container">
    <table class="table">
        <thead>
        <th>
            No
        </th>
        <th>
                @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.AuthorFullName)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.Content)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.CommentCount)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.LikeCount)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.CreateDate)
        </th>
        <th>
                @Html.DisplayNameFor(model => model.GenreId)
        </th>
        </thead>
        <tbody>
            @{
                var i = 1;
            }
            @foreach (var item in Model)
            {
                <tr style="cursor:pointer" onclick="location.href = '@Url.Action("Read","Article",new {id = item.Id})'">
                    <td>
                        @i
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.AuthorFullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.Title)
                    </td>

                    <td>
                        <span class="d-inline-block text-truncate" style="max-width: 250px; max-height:25px">@Html.Raw(item.Content)</span>

                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.CommentCount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.LikeCount)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.CreateDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelitem => item.GenreId)
                    </td>
                </tr>
                i++;
            }
        </tbody>
    </table>
</div>

@* <!-- Block level -->
<div class="row">
    <div class="col-2 text-truncate">
        This text is quite long, and will be truncated once displayed.
    </div>
</div>

<!-- Inline level -->
<span class="d-inline-block text-truncate" style="max-width: 150px;">
    This text is quite long, and will be truncated once displayed.
</span> *@